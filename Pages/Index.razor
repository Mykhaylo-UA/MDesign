@page "/"
@using DesignLibrary.Pages.MButton;
@using DesignLibrary.Pages.MButton.Enums
@using DesignLibrary.Components.MInputText;
@using DesignLibrary.Components.MRadioButton;
@using DesignLibrary.Components.MSwitch;
@using DesignLibrary.Components.MNotification;
@using DesignLibrary.Components.MNotificationContainer;
@using DesignLibrary.Components.MInputSelect;
@using DesignLibrary.Components.MCheckbox;
@using DesignLibrary.Components.MInputNumber
@using DesignLibrary.Components.MModal
@using DesignLibrary.Components.MDatePicker
@using DesignLibrary.Components.MTable

<MNotificationContainer/>


<div style="display: flex; flex-direction: column; width: 200px;">
    <MTable>
        <thead>
            <tr>
                <MTableCell></MTableCell>
                <MTableCell>Name</MTableCell>
                <MTableCell>Text</MTableCell>
                <MTableCell>Action</MTableCell>
            </tr>
        </thead>
        <tbody>
            <tr>
                <MTableCell ElementOnCentered><MCheckbox/></MTableCell>
                <MTableCell>Name</MTableCell>
                <MTableCell>Lorem dsasd sa as dasd as ddewr ewrrw we rw</MTableCell>
                <MTableCell ElementOnCentered><MSwitch/></MTableCell>
            </tr>
            <tr>
                <MTableCell ElementOnCentered><MCheckbox/></MTableCell>
                <MTableCell>Name</MTableCell>
                <MTableCell>Lorem dsasd sa as dasd as ddewr ewrrw we rw</MTableCell>
                <MTableCell ElementOnCentered><MSwitch/></MTableCell>
            </tr>
        </tbody>
    </MTable>

    <MDatePicker @bind-Value="@_dateTime"/>
    <MButton OnClick="() => { showModal = true; }">Secondary</MButton>
    <MButton OnClick="() => Console.WriteLine()" ButtonType="@MButtonType.Primary">Primary</MButton>
    <MInputSelect Values="@values" Placeholder="Select">
    </MInputSelect>
    <MInputNumber Format="+nnn (nn) nn nn nnn" Placeholder="+nnn (nn) nn nn nnn"/>
    <MInputNumber Format="nnn-nn=nn nn nnn" Placeholder="nnn-nn=nn nn nnn"/>
    <MInputText Placeholder="Input text"/>
    <MButton OnClick="Click">Notification add</MButton>
    <MRadioButton NameRadioGroup="radio" Label="Radio 1"/>
    <MRadioButton NameRadioGroup="radio" Label="Radio 2"/>
    <MRadioButton NameRadioGroup="radio" Label="Radio 3"/>

    <MCheckbox Label="Checkbox 1"/>
    <MCheckbox Label="Checkbox 2"/>

    <MSwitch Label="Switch"/>

    <MModal @bind-Show="showModal" Title="Title">
        <MTable>
                <thead>
                    <tr>
                        <MTableCell></MTableCell>
                        <MTableCell>Name</MTableCell>
                        <MTableCell>Text</MTableCell>
                        <MTableCell>Action</MTableCell>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <MTableCell ElementOnCentered><MCheckbox/></MTableCell>
                        <MTableCell>Name</MTableCell>
                        <MTableCell>Lorem dsasd sa as dasd as ddewr ewrrw we rw</MTableCell>
                        <MTableCell ElementOnCentered><MSwitch/></MTableCell>
                    </tr>
                    <tr>
                        <MTableCell ElementOnCentered><MCheckbox/></MTableCell>
                        <MTableCell>Name</MTableCell>
                        <MTableCell>Lorem dsasd sa as dasd as ddewr ewrrw we rw</MTableCell>
                        <MTableCell ElementOnCentered><MSwitch/></MTableCell>
                    </tr>
                </tbody>
            </MTable>

    </MModal>

    @_dateTime
</div>

@code{
    string value = "";
    DateTime? _dateTime = DateTime.Now;

    [Inject]
    NotificationManager _notificationManager { get; set; }

    bool showModal = false;

    List<string> values = new()
    {
        "default", "default 1", "default 2", "ooooo", "aaaaa", "gggggg", "sdasdasd",
        "default", "default 1", "default 2", "ooooo", "aaaaa", "gggggg", "sdasdasd"
    };

    void Click(MouseEventArgs obj)
    {
        Random r = new();
        _notificationManager.AddNotification("Authorization is success.", (MNotificationType) r.Next(0, 3), 2000);
    }

    void ShowModal()
    {
        showModal = true;
    }

}